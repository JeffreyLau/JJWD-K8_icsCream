/*
 * linux/arch/arm/mach-tcc88xx/include/mach/gpio.h
 *
 * Copyright (C) 2010 Telechips, Inc.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your
 * option) any later version.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
 * NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#ifndef __ASM_ARCH_TCC88XX_GPIO_H
#define __ASM_ARCH_TCC88XX_GPIO_H

#define GPIO_REGMASK    0x000001E0
#define GPIO_REG_SHIFT  5
#define GPIO_BITMASK    0x0000001F

#define GPIO_PORTA    ( 0 << GPIO_REG_SHIFT)
#define GPIO_PORTB    ( 1 << GPIO_REG_SHIFT)
#define GPIO_PORTC    ( 2 << GPIO_REG_SHIFT)
#define GPIO_PORTD    ( 3 << GPIO_REG_SHIFT)
#define GPIO_PORTE    ( 4 << GPIO_REG_SHIFT)
#define GPIO_PORTF    ( 5 << GPIO_REG_SHIFT)
#define GPIO_PORTG    ( 6 << GPIO_REG_SHIFT)
#define GPIO_PORTHDMI ( 7 << GPIO_REG_SHIFT)
#define GPIO_PORTADC  ( 8 << GPIO_REG_SHIFT)
#define GPIO_PORTEXT1 ( 9 << GPIO_REG_SHIFT)
#define GPIO_PORTEXT2 (10 << GPIO_REG_SHIFT)
#define GPIO_PORTEXT3 (11 << GPIO_REG_SHIFT)
#define GPIO_PORTEXT4 (12 << GPIO_REG_SHIFT)
#define GPIO_PORTEXT5 (13 << GPIO_REG_SHIFT)

#define TCC_GPA(x)    (GPIO_PORTA | (x))
#define TCC_GPB(x)    (GPIO_PORTB | (x))
#define TCC_GPC(x)    (GPIO_PORTC | (x))
#define TCC_GPD(x)    (GPIO_PORTD | (x))
#define TCC_GPE(x)    (GPIO_PORTE | (x))
#define TCC_GPF(x)    (GPIO_PORTF | (x))
#define TCC_GPG(x)    (GPIO_PORTG | (x))
#define TCC_GPHDMI(x) (GPIO_PORTHDMI | (x))
#define TCC_GPADC(x)  (GPIO_PORTADC | (x))
#define TCC_GPEXT1(x) (GPIO_PORTEXT1 | (x))
#define TCC_GPEXT2(x) (GPIO_PORTEXT2 | (x))
#define TCC_GPEXT3(x) (GPIO_PORTEXT3 | (x))
#define TCC_GPEXT4(x) (GPIO_PORTEXT4 | (x))
#define TCC_GPEXT5(x) (GPIO_PORTEXT5 | (x))

#define GPIO_FN_BITMASK 0xF0000000
#define GPIO_FN_SHIFT   28
#define GPIO_FN(x)    (((x) + 1) << GPIO_FN_SHIFT)
#define GPIO_FN0      (1  << GPIO_FN_SHIFT)
#define GPIO_FN1      (2  << GPIO_FN_SHIFT)
#define GPIO_FN2      (3  << GPIO_FN_SHIFT)
#define GPIO_FN3      (4  << GPIO_FN_SHIFT)
#define GPIO_FN4      (5  << GPIO_FN_SHIFT)
#define GPIO_FN5      (6  << GPIO_FN_SHIFT)
#define GPIO_FN6      (7  << GPIO_FN_SHIFT)
#define GPIO_FN7      (8  << GPIO_FN_SHIFT)
#define GPIO_FN8      (9  << GPIO_FN_SHIFT)
#define GPIO_FN9      (10 << GPIO_FN_SHIFT)
#define GPIO_FN10     (11 << GPIO_FN_SHIFT)
#define GPIO_FN11     (12 << GPIO_FN_SHIFT)
#define GPIO_FN12     (13 << GPIO_FN_SHIFT)
#define GPIO_FN13     (14 << GPIO_FN_SHIFT)

#define GPIO_CD_BITMASK 0x0F000000
#define GPIO_CD_SHIFT   24
#define GPIO_CD(x)    (((x) + 1) << GPIO_CD_SHIFT)
#define GPIO_CD0      (1 << GPIO_CD_SHIFT)
#define GPIO_CD1      (2 << GPIO_CD_SHIFT)
#define GPIO_CD2      (3 << GPIO_CD_SHIFT)
#define GPIO_CD3      (4 << GPIO_CD_SHIFT)

#define GPIO_PULLUP         0x0100
#define GPIO_PULLDOWN       0x0200
#define GPIO_PULL_DISABLE   0x0400
#define GPIO_SCHMITT_INPUT  0x0800
#define GPIO_CMOS_INPUT     0x0010

#define GPIO_INPUT	0x0001
#define GPIO_OUTPUT	0x0002
#define GPIO_HIGH	0x0020
#define GPIO_LOW	0x0040

#define gpio_get_value	__gpio_get_value
#define gpio_set_value	__gpio_set_value
#define gpio_cansleep	__gpio_cansleep

enum {
    EXINT_EI0 = 0,
    EXINT_EI1,
    EXINT_EI2,
    EXINT_EI3,
    EXINT_EI4,
    EXINT_EI5,
    EXINT_EI6,
    EXINT_EI7,
    EXINT_EI8,
    EXINT_EI9,
    EXINT_EI10,
    EXINT_EI11,
};

enum {
	EXTINT_HDMI_00 = 0,		// 0
	EXTINT_HDMI_01,
	EXTINT_HDMI_02,
	EXTINT_HDMI_03,
	EXTINT_ADC_02,
	EXTINT_ADC_03,			// 5
	EXTINT_ADC_04,
	EXTINT_ADC_05,
	EXTINT_GPIOG_00,
	EXTINT_GPIOG_01,
	EXTINT_GPIOG_02,		// 10
	EXTINT_GPIOG_03,
	EXTINT_GPIOG_04,
	EXTINT_GPIOG_05,
	EXTINT_GPIOG_06,
	EXTINT_GPIOG_07,		// 15
	EXTINT_GPIOG_08,
	EXTINT_GPIOG_09,
	EXTINT_GPIOG_10,
	EXTINT_GPIOG_11,
	EXTINT_GPIOG_12,		// 20
	EXTINT_GPIOG_13,
	EXTINT_GPIOG_14,
	EXTINT_GPIOG_15,
	EXTINT_GPIOG_16,
	EXTINT_GPIOG_17,		// 25
	EXTINT_GPIOG_18,
	EXTINT_GPIOG_19,
	EXTINT_GPIOF_00,
	EXTINT_GPIOF_01,
	EXTINT_GPIOF_02,		// 30
	EXTINT_GPIOF_03,
	EXTINT_GPIOF_04,
	EXTINT_GPIOF_05,
	EXTINT_GPIOF_06,
	EXTINT_GPIOF_07,		// 35
	EXTINT_GPIOF_08,
	EXTINT_GPIOF_09,
	EXTINT_GPIOF_10,
	EXTINT_GPIOF_11,
	EXTINT_GPIOF_12,		// 40
	EXTINT_GPIOF_13,
	EXTINT_GPIOF_14,
	EXTINT_GPIOF_15,
	EXTINT_GPIOF_16,
	EXTINT_GPIOF_17,		// 45
	EXTINT_GPIOF_18,
	EXTINT_GPIOF_19,
	EXTINT_GPIOF_20,
	EXTINT_GPIOF_21,
	EXTINT_GPIOF_22,		// 50
	EXTINT_GPIOF_23,
	EXTINT_GPIOF_24,
	EXTINT_GPIOF_25,
	EXTINT_GPIOF_26,
	EXTINT_GPIOF_27,		// 55
	EXTINT_GPIOF_28,
	EXTINT_GPIOF_29,
	EXTINT_GPIOF_30,
	EXTINT_GPIOE_00,
	EXTINT_GPIOE_01,		// 60
	EXTINT_GPIOE_02,
	EXTINT_GPIOE_03,
	EXTINT_GPIOE_04,
	EXTINT_GPIOE_05,
	EXTINT_GPIOE_06,		// 65
	EXTINT_GPIOE_07,
	EXTINT_GPIOE_08,
	EXTINT_GPIOE_09,
	EXTINT_GPIOE_10,
	EXTINT_GPIOE_11,		// 70
	EXTINT_GPIOE_12,
	EXTINT_GPIOE_13,
	EXTINT_GPIOE_14,
	EXTINT_GPIOE_15,
	EXTINT_GPIOE_16,		// 75
	EXTINT_GPIOE_17,
	EXTINT_GPIOE_18,
	EXTINT_GPIOE_19,
	EXTINT_GPIOE_20,
	EXTINT_GPIOE_21,		// 80
	EXTINT_GPIOE_22,
	EXTINT_GPIOE_23,
	EXTINT_GPIOE_24,
	EXTINT_GPIOE_25,
	EXTINT_GPIOE_26,		// 85
	EXTINT_GPIOE_27,
	EXTINT_GPIOE_28,
	EXTINT_GPIOE_29,
	EXTINT_GPIOE_30,
	EXTINT_GPIOE_31,		// 90
	EXTINT_GPIOD_00,
	EXTINT_GPIOD_01,
	EXTINT_GPIOD_02,
	EXTINT_GPIOD_03,
	EXTINT_GPIOD_04,		// 95
	EXTINT_GPIOD_05,
	EXTINT_GPIOD_06,
	EXTINT_GPIOD_07,
	EXTINT_GPIOD_08,
	EXTINT_GPIOD_09,		// 100
	EXTINT_GPIOD_10,
	EXTINT_GPIOD_11,
	EXTINT_GPIOD_12,
	EXTINT_GPIOD_13,
	EXTINT_GPIOD_14,		// 105
	EXTINT_GPIOD_15,
	EXTINT_GPIOD_16,
	EXTINT_GPIOD_17,
	EXTINT_GPIOD_18,
	EXTINT_GPIOD_19,		// 110
	EXTINT_GPIOD_20,
	EXTINT_GPIOD_21,
	EXTINT_GPIOC_00,
	EXTINT_GPIOC_01,
	EXTINT_GPIOC_02,		// 115
	EXTINT_GPIOC_03,
	EXTINT_GPIOC_04,
	EXTINT_GPIOC_05,
	EXTINT_GPIOC_06,
	EXTINT_GPIOC_07,		// 120
	EXTINT_GPIOC_08,
	EXTINT_GPIOC_09,
	EXTINT_GPIOC_10,
	EXTINT_GPIOC_11,
	EXTINT_GPIOC_12,		// 125
	EXTINT_GPIOC_13,
	EXTINT_GPIOC_14,
	EXTINT_GPIOC_15,
	EXTINT_GPIOC_16,
	EXTINT_GPIOC_17,		// 130
	EXTINT_GPIOC_18,
	EXTINT_GPIOC_19,
	EXTINT_GPIOC_20,
	EXTINT_GPIOC_21,
	EXTINT_GPIOC_22,		// 135
	EXTINT_GPIOC_23,
	EXTINT_GPIOC_24,
	EXTINT_GPIOC_25,
	EXTINT_GPIOC_26,
	EXTINT_GPIOC_27,		// 140
	EXTINT_GPIOC_28,
	EXTINT_GPIOC_29,
	EXTINT_GPIOB_00,
	EXTINT_GPIOB_01,
	EXTINT_GPIOB_02,		// 145
	EXTINT_GPIOB_03,
	EXTINT_GPIOB_04,
	EXTINT_GPIOB_05,
	EXTINT_GPIOB_06,
	EXTINT_GPIOB_07,		// 150
	EXTINT_GPIOB_08,
	EXTINT_GPIOB_09,
	EXTINT_GPIOB_10,
	EXTINT_GPIOB_11,
	EXTINT_GPIOB_12,		// 155
	EXTINT_GPIOB_13,
	EXTINT_GPIOB_14,
	EXTINT_GPIOB_15,
	EXTINT_GPIOB_16,
	EXTINT_GPIOB_17,		// 160
	EXTINT_GPIOB_18,
	EXTINT_GPIOB_19,
	EXTINT_GPIOB_20,
	EXTINT_GPIOB_21,
	EXTINT_GPIOB_22,		// 165
	EXTINT_GPIOB_23,
	EXTINT_GPIOB_24,
	EXTINT_GPIOB_25,
	EXTINT_GPIOB_26,
	EXTINT_GPIOB_27,		// 170
	EXTINT_GPIOB_28,
	EXTINT_GPIOB_29,
	EXTINT_GPIOA_00,
	EXTINT_GPIOA_01,
	EXTINT_GPIOA_02,		// 175
	EXTINT_GPIOA_03,
	EXTINT_GPIOA_04,
	EXTINT_GPIOA_05,
	EXTINT_GPIOA_06,
	EXTINT_GPIOA_07,		// 180
	EXTINT_GPIOA_08,
	EXTINT_GPIOA_09,
	EXTINT_GPIOA_10,
	EXTINT_GPIOA_11,
	EXTINT_GPIOA_12,		// 185
	EXTINT_GPIOA_13,
	EXTINT_GPIOA_14,
	EXTINT_GPIOA_15,
	EXTINT_GPIOA_16,
	EXTINT_TSUPDOWN,	// 190
	EXTINT_TSSTOP,
	EXTINT_TSWKU,
	EXTINT_RTC_WKUP,
};
        
int gpio_to_irq(unsigned gpio);
int tcc_gpio_config_ext_intr(unsigned intr, unsigned source);
int tcc_gpio_config(unsigned gpio, unsigned flags);

#define ARCH_NR_GPIOS	TCC_GPEXT5(16)

struct board_gpio_irq_config {
	unsigned gpio;
	unsigned irq;
};

extern struct board_gpio_irq_config *board_gpio_irqs;

#include <asm-generic/gpio.h>

#endif
